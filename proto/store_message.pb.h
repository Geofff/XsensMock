// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store_message.proto

#ifndef PROTOBUF_store_5fmessage_2eproto__INCLUDED
#define PROTOBUF_store_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GenericProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_store_5fmessage_2eproto();
void protobuf_AssignDesc_store_5fmessage_2eproto();
void protobuf_ShutdownFile_store_5fmessage_2eproto();

class GenericMessage;

enum GenericMessage_MessageType {
  GenericMessage_MessageType_UNKNOWN = 0,
  GenericMessage_MessageType_XSENS = 1,
  GenericMessage_MessageType_GPS = 2,
  GenericMessage_MessageType_LIDAR = 3
};
bool GenericMessage_MessageType_IsValid(int value);
const GenericMessage_MessageType GenericMessage_MessageType_MessageType_MIN = GenericMessage_MessageType_UNKNOWN;
const GenericMessage_MessageType GenericMessage_MessageType_MessageType_MAX = GenericMessage_MessageType_LIDAR;
const int GenericMessage_MessageType_MessageType_ARRAYSIZE = GenericMessage_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GenericMessage_MessageType_descriptor();
inline const ::std::string& GenericMessage_MessageType_Name(GenericMessage_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GenericMessage_MessageType_descriptor(), value);
}
inline bool GenericMessage_MessageType_Parse(
    const ::std::string& name, GenericMessage_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GenericMessage_MessageType>(
    GenericMessage_MessageType_descriptor(), name, value);
}
// ===================================================================

class GenericMessage : public ::google::protobuf::Message {
 public:
  GenericMessage();
  virtual ~GenericMessage();

  GenericMessage(const GenericMessage& from);

  inline GenericMessage& operator=(const GenericMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericMessage& default_instance();

  void Swap(GenericMessage* other);

  // implements Message ----------------------------------------------

  GenericMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericMessage& from);
  void MergeFrom(const GenericMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GenericMessage_MessageType MessageType;
  static const MessageType UNKNOWN = GenericMessage_MessageType_UNKNOWN;
  static const MessageType XSENS = GenericMessage_MessageType_XSENS;
  static const MessageType GPS = GenericMessage_MessageType_GPS;
  static const MessageType LIDAR = GenericMessage_MessageType_LIDAR;
  static inline bool MessageType_IsValid(int value) {
    return GenericMessage_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    GenericMessage_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    GenericMessage_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    GenericMessage_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return GenericMessage_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return GenericMessage_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return GenericMessage_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 time_since_start = 1;
  inline bool has_time_since_start() const;
  inline void clear_time_since_start();
  static const int kTimeSinceStartFieldNumber = 1;
  inline ::google::protobuf::uint32 time_since_start() const;
  inline void set_time_since_start(::google::protobuf::uint32 value);

  // optional .GenericProto.GenericMessage.MessageType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::GenericProto::GenericMessage_MessageType type() const;
  inline void set_type(::GenericProto::GenericMessage_MessageType value);

  // optional uint32 message_size = 3;
  inline bool has_message_size() const;
  inline void clear_message_size();
  static const int kMessageSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 message_size() const;
  inline void set_message_size(::google::protobuf::uint32 value);

  // optional bytes serialized_message = 4;
  inline bool has_serialized_message() const;
  inline void clear_serialized_message();
  static const int kSerializedMessageFieldNumber = 4;
  inline const ::std::string& serialized_message() const;
  inline void set_serialized_message(const ::std::string& value);
  inline void set_serialized_message(const char* value);
  inline void set_serialized_message(const void* value, size_t size);
  inline ::std::string* mutable_serialized_message();
  inline ::std::string* release_serialized_message();
  inline void set_allocated_serialized_message(::std::string* serialized_message);

  // @@protoc_insertion_point(class_scope:GenericProto.GenericMessage)
 private:
  inline void set_has_time_since_start();
  inline void clear_has_time_since_start();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_message_size();
  inline void clear_has_message_size();
  inline void set_has_serialized_message();
  inline void clear_has_serialized_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 time_since_start_;
  int type_;
  ::std::string* serialized_message_;
  ::google::protobuf::uint32 message_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_store_5fmessage_2eproto();
  friend void protobuf_AssignDesc_store_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_store_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static GenericMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// GenericMessage

// optional uint32 time_since_start = 1;
inline bool GenericMessage::has_time_since_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenericMessage::set_has_time_since_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenericMessage::clear_has_time_since_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenericMessage::clear_time_since_start() {
  time_since_start_ = 0u;
  clear_has_time_since_start();
}
inline ::google::protobuf::uint32 GenericMessage::time_since_start() const {
  return time_since_start_;
}
inline void GenericMessage::set_time_since_start(::google::protobuf::uint32 value) {
  set_has_time_since_start();
  time_since_start_ = value;
}

// optional .GenericProto.GenericMessage.MessageType type = 2;
inline bool GenericMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenericMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenericMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenericMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GenericProto::GenericMessage_MessageType GenericMessage::type() const {
  return static_cast< ::GenericProto::GenericMessage_MessageType >(type_);
}
inline void GenericMessage::set_type(::GenericProto::GenericMessage_MessageType value) {
  assert(::GenericProto::GenericMessage_MessageType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 message_size = 3;
inline bool GenericMessage::has_message_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenericMessage::set_has_message_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenericMessage::clear_has_message_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenericMessage::clear_message_size() {
  message_size_ = 0u;
  clear_has_message_size();
}
inline ::google::protobuf::uint32 GenericMessage::message_size() const {
  return message_size_;
}
inline void GenericMessage::set_message_size(::google::protobuf::uint32 value) {
  set_has_message_size();
  message_size_ = value;
}

// optional bytes serialized_message = 4;
inline bool GenericMessage::has_serialized_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GenericMessage::set_has_serialized_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GenericMessage::clear_has_serialized_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GenericMessage::clear_serialized_message() {
  if (serialized_message_ != &::google::protobuf::internal::kEmptyString) {
    serialized_message_->clear();
  }
  clear_has_serialized_message();
}
inline const ::std::string& GenericMessage::serialized_message() const {
  return *serialized_message_;
}
inline void GenericMessage::set_serialized_message(const ::std::string& value) {
  set_has_serialized_message();
  if (serialized_message_ == &::google::protobuf::internal::kEmptyString) {
    serialized_message_ = new ::std::string;
  }
  serialized_message_->assign(value);
}
inline void GenericMessage::set_serialized_message(const char* value) {
  set_has_serialized_message();
  if (serialized_message_ == &::google::protobuf::internal::kEmptyString) {
    serialized_message_ = new ::std::string;
  }
  serialized_message_->assign(value);
}
inline void GenericMessage::set_serialized_message(const void* value, size_t size) {
  set_has_serialized_message();
  if (serialized_message_ == &::google::protobuf::internal::kEmptyString) {
    serialized_message_ = new ::std::string;
  }
  serialized_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenericMessage::mutable_serialized_message() {
  set_has_serialized_message();
  if (serialized_message_ == &::google::protobuf::internal::kEmptyString) {
    serialized_message_ = new ::std::string;
  }
  return serialized_message_;
}
inline ::std::string* GenericMessage::release_serialized_message() {
  clear_has_serialized_message();
  if (serialized_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialized_message_;
    serialized_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenericMessage::set_allocated_serialized_message(::std::string* serialized_message) {
  if (serialized_message_ != &::google::protobuf::internal::kEmptyString) {
    delete serialized_message_;
  }
  if (serialized_message) {
    set_has_serialized_message();
    serialized_message_ = serialized_message;
  } else {
    clear_has_serialized_message();
    serialized_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GenericProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GenericProto::GenericMessage_MessageType>() {
  return ::GenericProto::GenericMessage_MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_store_5fmessage_2eproto__INCLUDED
